//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MPOWR.Dal.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MPOWREntities : DbContext
    {
        public MPOWREntities()
            : base("name=MPOWREntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BusinessUnit> BusinessUnits { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<CountryBudget> CountryBudgets { get; set; }
        public virtual DbSet<District> Districts { get; set; }
        public virtual DbSet<FinancialYear> FinancialYears { get; set; }
        public virtual DbSet<GuardRailFYConfig> GuardRailFYConfigs { get; set; }
        public virtual DbSet<GuardRailsConfig> GuardRailsConfigs { get; set; }
        public virtual DbSet<LoginAuthentication> LoginAuthentications { get; set; }
        public virtual DbSet<MDFVarianceReason> MDFVarianceReasons { get; set; }
        public virtual DbSet<MembershipType> MembershipTypes { get; set; }
        public virtual DbSet<Milestone> Milestones { get; set; }
        public virtual DbSet<MilestoneFYConfig> MilestoneFYConfigs { get; set; }
        public virtual DbSet<MilestoneNotification> MilestoneNotifications { get; set; }
        public virtual DbSet<MilestoneNotificationsRole> MilestoneNotificationsRoles { get; set; }
        public virtual DbSet<ModelOutputTable> ModelOutputTables { get; set; }
        public virtual DbSet<ModelParameterConfig> ModelParameterConfigs { get; set; }
        public virtual DbSet<ModelParameterFYConfig> ModelParameterFYConfigs { get; set; }
        public virtual DbSet<OrganisationType> OrganisationTypes { get; set; }
        public virtual DbSet<Partner> Partners { get; set; }
        public virtual DbSet<PartnerBUBudget> PartnerBUBudgets { get; set; }
        public virtual DbSet<PartnerSalesRefreshHistory> PartnerSalesRefreshHistories { get; set; }
        public virtual DbSet<PartnerType> PartnerTypes { get; set; }
        public virtual DbSet<ProgramMDF> ProgramMDFs { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<RoleFeatureActivity> RoleFeatureActivities { get; set; }
        public virtual DbSet<RolePartnerType> RolePartnerTypes { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserBusinessUnit> UserBusinessUnits { get; set; }
        public virtual DbSet<UserCountry> UserCountries { get; set; }
        public virtual DbSet<UserDistrict> UserDistricts { get; set; }
        public virtual DbSet<UserManual> UserManuals { get; set; }
        public virtual DbSet<UserRTM> UserRTMs { get; set; }
        public virtual DbSet<UserType> UserTypes { get; set; }
        public virtual DbSet<UserGeo> UserGeos { get; set; }
        public virtual DbSet<Geo> Geos { get; set; }
        public virtual DbSet<PartnerBudget> PartnerBudgets { get; set; }
        public virtual DbSet<BUBudget> BUBudgets { get; set; }
        public virtual DbSet<MDFPlanning> MDFPlannings { get; set; }
        public virtual DbSet<ModelOutputSummaryTable> ModelOutputSummaryTables { get; set; }
        public virtual DbSet<ModelParameterTable> ModelParameterTables { get; set; }
        public virtual DbSet<UserRoleUserType> UserRoleUserTypes { get; set; }
        public virtual DbSet<PartnerSale> PartnerSales { get; set; }
        public virtual DbSet<ModelBUParameterTable> ModelBUParameterTables { get; set; }
        public virtual DbSet<Feature> Features { get; set; }
        public virtual DbSet<FeatureAction> FeatureActions { get; set; }
        public virtual DbSet<FeatureActionType> FeatureActionTypes { get; set; }
        public virtual DbSet<FocusedArea> FocusedAreas { get; set; }
        public virtual DbSet<DataLoadRefresh> DataLoadRefreshes { get; set; }
        public virtual DbSet<MembershipGroup> MembershipGroups { get; set; }
        public virtual DbSet<ModelDefaultOutputTable> ModelDefaultOutputTables { get; set; }
        public virtual DbSet<GlossaryScreenParameterDetail> GlossaryScreenParameterDetails { get; set; }
        public virtual DbSet<GlossaryScreenEditDetail> GlossaryScreenEditDetails { get; set; }
        public virtual DbSet<GlossaryScreenParameterEditDetail> GlossaryScreenParameterEditDetails { get; set; }
        public virtual DbSet<GlossaryScreenDetail> GlossaryScreenDetails { get; set; }
        public virtual DbSet<GeoConfigDetails> GeoConfigDetails { get; set; }
        public virtual DbSet<AppConfig> AppConfig { get; set; }
        public virtual DbSet<ContraWeb_Upload_CountryMapping> ContraWeb_Upload_CountryMapping { get; set; }
        public virtual DbSet<ContraWeb_Upload_DataFile> ContraWeb_Upload_DataFile { get; set; }
        public virtual DbSet<ContraWeb_Upload_FinancialYearMapping> ContraWeb_Upload_FinancialYearMapping { get; set; }
        public virtual DbSet<ContraWeb_Upload_GeoMapping> ContraWeb_Upload_GeoMapping { get; set; }
        public virtual DbSet<ContraWeb_Upload_StatusMaster> ContraWeb_Upload_StatusMaster { get; set; }
        public virtual DbSet<ContraWeb_Upload_TimeTracker> ContraWeb_Upload_TimeTracker { get; set; }
        public virtual DbSet<ContraWeb_Upload_Configuration> ContraWeb_Upload_Configuration { get; set; }
        public virtual DbSet<FeatureGeo> FeatureGeo { get; set; }
        public virtual DbSet<FlatDataValidationLog> FlatDataValidationLog { get; set; }
    
        public virtual int usp_UpdateGeoConfigDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateGeoConfigDetails");
        }
    
        public virtual int usp_UpdateMpowrUserList(string userID, string tokenID, string applicationID, string updateUserList)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var tokenIDParameter = tokenID != null ?
                new ObjectParameter("tokenID", tokenID) :
                new ObjectParameter("tokenID", typeof(string));
    
            var applicationIDParameter = applicationID != null ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(string));
    
            var updateUserListParameter = updateUserList != null ?
                new ObjectParameter("UpdateUserList", updateUserList) :
                new ObjectParameter("UpdateUserList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateMpowrUserList", userIDParameter, tokenIDParameter, applicationIDParameter, updateUserListParameter);
        }
    
        public virtual int usp_RefineGlossaryText()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_RefineGlossaryText");
        }
    
        public virtual int usp_UpdateGlossaryFinYear()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateGlossaryFinYear");
        }
    }
}
